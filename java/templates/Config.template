/**
  * @brief Configuration class which contains definitions for every part of the bot (usually gotten through hardwareMap.get)
  *
  * Every ActionIndex should extend this class in order to have access to the bot's components at runtime.
  * This cannot be run as its own OpMode, it extends LinearOpMode for telemetry and other utilities.
*/

/*
Copyright $(year) $(teamName)

Permission is hereby granted, free of charge, to any person obtaining a copy of this software and
associated documentation files (the "Software"), to deal in the Software without restriction,
including without limitation the rights to use, copy, modify, merge, publish, distribute,
sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is
furnished to do so, subject to the following conditions:

The above copyright notice and this permission notice shall be included in all copies or substantial
portions of the Software.

THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT
NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/

// TODO: custom package?
package org.firstinspires.ftc.teamcode.actions;

import com.qualcomm.robotcore.eventloop.opmode.LinearOpMode;
import com.qualcomm.robotcore.eventloop.opmode.TeleOp;
import com.qualcomm.robotcore.eventloop.opmode.Disabled;
import com.qualcomm.robotcore.util.ElapsedTime;

// part imports
// NOTE: there may be duplicate imports; these are ignored by the compiler but can be safely removed if desired
$(imports)

public class Config extends LinearOpMode {
	// part declarations
	$(declarations)
	
	// global variables
	
	
	// predefined:
	
	// bot location
	public double xPosition;
	public double yPosition;
	
	// methods
	
	public void setPosition(double x, double y){
		this.xPosition = x;
		this.yPosition = y;
	}
	
	public void loadParts(){
		// load hardware
		$(load)
	}
}